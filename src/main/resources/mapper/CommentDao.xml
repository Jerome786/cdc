<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdc.train.dao.CommentDao">

    <resultMap type="com.cdc.train.entity.Comment" id="CommentMap">
        <result property="commentId" column="comment_id" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="articleId" column="article_id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="commentParentId" column="comment_parent_id" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="ResultDTO" type="com.cdc.train.entity.dto.CommentDTO" extends="CommentMap">
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="pUserId" column="pUserId" jdbcType="VARCHAR"/>
        <result property="pNickname" column="pNickname" jdbcType="VARCHAR"/>
        <result property="pcontent" column="pcontent" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询指定行数据-->
    <select id="selectByArticleId" resultMap="ResultDTO">
        SELECT c1.*,u1.avatar,u1.nickname,u2.nickname as pNickname,u2.user_id as pUserId,c2.content as pcontent from `comment` c1
        LEFT JOIN user u1 on c1.user_id = u1.user_id
        LEFT JOIN `comment` c2 on c2.comment_id = c1.comment_parent_id
        LEFT JOIN user u2 on c2.user_id = u2.user_id
        where c1.article_id = #{articleId}
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="CommentMap">
        select
          comment_id, content, article_id, user_id, comment_parent_id
        from cdc.comment
        where comment_id = #{commentId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="CommentMap">
        select
          comment_id, content, article_id, user_id, comment_parent_id
        from cdc.comment
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="CommentMap">
        select
        comment_id, content, article_id, user_id, comment_parent_id
        from cdc.comment le
        <where>
            <if test="commentId != null">
                and comment_id = #{commentId}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="articleId != null">
                and article_id = #{articleId}
            </if>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="commentParentId != null">
                and comment_parent_id = #{commentParentId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="commentId" useGeneratedKeys="true">
        insert into cdc.comment(content, article_id, user_id, comment_parent_id)
        values (#{content}, #{articleId}, #{userId}, #{commentParentId})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update cdc.comment
        <set>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="articleId != null">
                article_id = #{articleId},
            </if>
            <if test="userId != null and userId != ''">
                user_id = #{userId},
            </if>
            <if test="commentParentId != null">
                comment_parent_id = #{commentParentId},
            </if>
        </set>
        where comment_id = #{commentId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from cdc.comment where comment_id = #{commentId}
    </delete>

</mapper>